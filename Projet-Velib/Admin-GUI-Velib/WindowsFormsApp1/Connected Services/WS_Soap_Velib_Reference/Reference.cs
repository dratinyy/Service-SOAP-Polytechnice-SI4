//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApplicationGUI.WS_Soap_Velib_Reference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WS_Soap_Velib_Reference.IServiceMonitoring")]
    public interface IServiceMonitoring {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMonitoring/GetClientsBetweenDates", ReplyAction="http://tempuri.org/IServiceMonitoring/GetClientsBetweenDatesResponse")]
        int GetClientsBetweenDates(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMonitoring/GetClientsBetweenDates", ReplyAction="http://tempuri.org/IServiceMonitoring/GetClientsBetweenDatesResponse")]
        System.Threading.Tasks.Task<int> GetClientsBetweenDatesAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMonitoring/GetClientsBetweenHours", ReplyAction="http://tempuri.org/IServiceMonitoring/GetClientsBetweenHoursResponse")]
        int GetClientsBetweenHours(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMonitoring/GetClientsBetweenHours", ReplyAction="http://tempuri.org/IServiceMonitoring/GetClientsBetweenHoursResponse")]
        System.Threading.Tasks.Task<int> GetClientsBetweenHoursAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMonitoring/GetClientRequestsBetweenDates", ReplyAction="http://tempuri.org/IServiceMonitoring/GetClientRequestsBetweenDatesResponse")]
        int GetClientRequestsBetweenDates(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMonitoring/GetClientRequestsBetweenDates", ReplyAction="http://tempuri.org/IServiceMonitoring/GetClientRequestsBetweenDatesResponse")]
        System.Threading.Tasks.Task<int> GetClientRequestsBetweenDatesAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMonitoring/GetClientRequestsBetweenHours", ReplyAction="http://tempuri.org/IServiceMonitoring/GetClientRequestsBetweenHoursResponse")]
        int GetClientRequestsBetweenHours(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMonitoring/GetClientRequestsBetweenHours", ReplyAction="http://tempuri.org/IServiceMonitoring/GetClientRequestsBetweenHoursResponse")]
        System.Threading.Tasks.Task<int> GetClientRequestsBetweenHoursAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMonitoring/GetJCDecauxRequestsBetweenDates", ReplyAction="http://tempuri.org/IServiceMonitoring/GetJCDecauxRequestsBetweenDatesResponse")]
        int GetJCDecauxRequestsBetweenDates(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMonitoring/GetJCDecauxRequestsBetweenDates", ReplyAction="http://tempuri.org/IServiceMonitoring/GetJCDecauxRequestsBetweenDatesResponse")]
        System.Threading.Tasks.Task<int> GetJCDecauxRequestsBetweenDatesAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMonitoring/GetJCDecauxRequestsBetweenHours", ReplyAction="http://tempuri.org/IServiceMonitoring/GetJCDecauxRequestsBetweenHoursResponse")]
        int GetJCDecauxRequestsBetweenHours(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMonitoring/GetJCDecauxRequestsBetweenHours", ReplyAction="http://tempuri.org/IServiceMonitoring/GetJCDecauxRequestsBetweenHoursResponse")]
        System.Threading.Tasks.Task<int> GetJCDecauxRequestsBetweenHoursAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMonitoring/GetJCDecauxAverageResponseTime", ReplyAction="http://tempuri.org/IServiceMonitoring/GetJCDecauxAverageResponseTimeResponse")]
        System.TimeSpan GetJCDecauxAverageResponseTime(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMonitoring/GetJCDecauxAverageResponseTime", ReplyAction="http://tempuri.org/IServiceMonitoring/GetJCDecauxAverageResponseTimeResponse")]
        System.Threading.Tasks.Task<System.TimeSpan> GetJCDecauxAverageResponseTimeAsync(System.DateTime start, System.DateTime end);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceMonitoringChannel : ApplicationGUI.WS_Soap_Velib_Reference.IServiceMonitoring, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceMonitoringClient : System.ServiceModel.ClientBase<ApplicationGUI.WS_Soap_Velib_Reference.IServiceMonitoring>, ApplicationGUI.WS_Soap_Velib_Reference.IServiceMonitoring {
        
        public ServiceMonitoringClient() {
        }
        
        public ServiceMonitoringClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceMonitoringClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceMonitoringClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceMonitoringClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetClientsBetweenDates(System.DateTime start, System.DateTime end) {
            return base.Channel.GetClientsBetweenDates(start, end);
        }
        
        public System.Threading.Tasks.Task<int> GetClientsBetweenDatesAsync(System.DateTime start, System.DateTime end) {
            return base.Channel.GetClientsBetweenDatesAsync(start, end);
        }
        
        public int GetClientsBetweenHours(System.DateTime start, System.DateTime end) {
            return base.Channel.GetClientsBetweenHours(start, end);
        }
        
        public System.Threading.Tasks.Task<int> GetClientsBetweenHoursAsync(System.DateTime start, System.DateTime end) {
            return base.Channel.GetClientsBetweenHoursAsync(start, end);
        }
        
        public int GetClientRequestsBetweenDates(System.DateTime start, System.DateTime end) {
            return base.Channel.GetClientRequestsBetweenDates(start, end);
        }
        
        public System.Threading.Tasks.Task<int> GetClientRequestsBetweenDatesAsync(System.DateTime start, System.DateTime end) {
            return base.Channel.GetClientRequestsBetweenDatesAsync(start, end);
        }
        
        public int GetClientRequestsBetweenHours(System.DateTime start, System.DateTime end) {
            return base.Channel.GetClientRequestsBetweenHours(start, end);
        }
        
        public System.Threading.Tasks.Task<int> GetClientRequestsBetweenHoursAsync(System.DateTime start, System.DateTime end) {
            return base.Channel.GetClientRequestsBetweenHoursAsync(start, end);
        }
        
        public int GetJCDecauxRequestsBetweenDates(System.DateTime start, System.DateTime end) {
            return base.Channel.GetJCDecauxRequestsBetweenDates(start, end);
        }
        
        public System.Threading.Tasks.Task<int> GetJCDecauxRequestsBetweenDatesAsync(System.DateTime start, System.DateTime end) {
            return base.Channel.GetJCDecauxRequestsBetweenDatesAsync(start, end);
        }
        
        public int GetJCDecauxRequestsBetweenHours(System.DateTime start, System.DateTime end) {
            return base.Channel.GetJCDecauxRequestsBetweenHours(start, end);
        }
        
        public System.Threading.Tasks.Task<int> GetJCDecauxRequestsBetweenHoursAsync(System.DateTime start, System.DateTime end) {
            return base.Channel.GetJCDecauxRequestsBetweenHoursAsync(start, end);
        }
        
        public System.TimeSpan GetJCDecauxAverageResponseTime(System.DateTime start, System.DateTime end) {
            return base.Channel.GetJCDecauxAverageResponseTime(start, end);
        }
        
        public System.Threading.Tasks.Task<System.TimeSpan> GetJCDecauxAverageResponseTimeAsync(System.DateTime start, System.DateTime end) {
            return base.Channel.GetJCDecauxAverageResponseTimeAsync(start, end);
        }
    }
}
